# Provision production environment
---
- name: Ensure MySQL dbservers are ready.
  hosts: dbservers
  become: yes
  roles:
    - geerlingguy.mysql

- name: Ensure GlusterFS fileservers are ready.
  hosts: fileservers
  become: yes
  vars:
    glusterfs_bricks:
      - /data/glusterfs/{{ glusterfs_volume_name }}/brick0/brick
  roles:
    - pm5.glusterfs

- name: Ensure GlusterFS service is connected.
  hosts: codeservers
  become: yes
  vars:
    glusterfs_server: "no"
    glusterfs_client: "yes"
    glusterfs_mount_points:
      - name: '{{ drupal_docroot_dir }}/sites/default/files'
        src: "{{ glusterfs_volume_host }}:{{ glusterfs_volume_name }}"
    glusterfs_mount_owner: www-data
    glusterfs_mount_group: www-data
  roles:
    - pm5.glusterfs

- name: Ensure Memcached cacheservers are ready.
  hosts: cacheservers
  become: yes
  vars:
    memcached_listen_ip: 0.0.0.0
  roles:
    - geerlingguy.memcached

- name: Ensure Nginx webservers are ready.
  hosts: webservers
  become: yes
  vars:
    nginx_vhosts:
      - listen: "80 default_server"
        server_name: "localhost"
        root: "{{ drupal_docroot_dir }}"
        index: "index.php index.html index.htm"
        extra_parameters: |
          # XXX lot of optimizations; should extract an assetservers role but Drupal 7.x don't really support this.
          # <https://www.nginx.com/resources/wiki/start/topics/recipes/drupal/>
          location = /favicon.ico {
              log_not_found off;
              access_log off;
          }
          location = /robots.txt {
              allow all;
              log_not_found off;
              access_log off;
          }
          # Very rarely should these ever be accessed outside of your lan
          location ~* \.(txt|log)$ {
              allow 127.0.0.1;
              deny all;
          }
          location ~ \..*/.*\.php$ {
              return 403;
          }
          location ~ ^/sites/.*/private/ {
              return 403;
          }
          # Allow "Well-Known URIs" as per RFC 5785
          location ~* ^/.well-known/ {
              allow all;
          }
          # Block access to "hidden" files and directories whose names begin with a period.
          location ~ (^|/)\. {
              return 403;
          }
          location / {
              # try_files $uri @rewrite; # For Drupal <= 6
              try_files $uri /index.php?$query_string; # For Drupal >= 7
          }
          location @rewrite {
              rewrite ^/(.*)$ /index.php?q=$1;
          }
          # Don't allow direct access to PHP files in the vendor directory.
          location ~ /vendor/.*\.php$ {
              deny all;
              return 404;
          }
          # In Drupal 8, we must also match new paths where the '.php' appears in the middle,
          # such as update.php/selection. The rule we use is strict, and only allows this pattern
          # with the update.php front controller.  This allows legacy path aliases in the form of
          # blog/index.php/legacy-path to continue to route to Drupal nodes. If you do not have
          # any paths like that, then you might prefer to use a laxer rule, such as:
          #   location ~ \.php(/|$) {
          # The laxer rule will continue to work if Drupal uses this new URL pattern with front
          # controllers other than update.php in a future release.
          location ~ '\.php$|^/update.php' {
              fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
              #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
              include fastcgi_params;
              fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
              fastcgi_param PATH_INFO $fastcgi_path_info;
              fastcgi_intercept_errors on;
              fastcgi_pass unix:/var/run/php5-fpm.sock;
          }

          # Fighting with Styles? This little gem is amazing.
          # location ~ ^/sites/.*/files/imagecache/ { # For Drupal <= 6
          location ~ ^/sites/.*/files/styles/ { # For Drupal >= 7
              try_files $uri @rewrite;
          }
          location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
              expires max;
              log_not_found off;
          }

    nginx_remove_default_vhost: true
    php_webserver_daemon: "nginx"
    php_enable_php_fpm: true
    php_fpm_listen: "/var/run/php5-fpm.sock"
  roles:
    - geerlingguy.nginx
    - geerlingguy.php
